<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>su和sudo的小知识</title>
      <link href="/2023/04/20/su%E5%92%8Csudo%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/04/20/su%E5%92%8Csudo%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su cqd</span><br></pre></td></tr></table></figure><p>表示切换到cqd用户模式，需要输入该用户密码。如果是root用户使用该命令，则不需要输入密码，因为root权限高。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su</span><br></pre></td></tr></table></figure><br>只输入su后面不加账户名称时，系统默认切换到root账户，需要知道root的密码。没有时间限制。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -</span><br></pre></td></tr></table></figure><br>表示申请切换root用户，需要申请root用户密码。</p><blockquote><p>有些Linux发行版，例如ubuntu，默认没有设置root用户的密码，所以需要我们先使用sudo passwd root设置root用户密码。</p></blockquote><h3 id="su和su-区别"><a href="#su和su-区别" class="headerlink" title="su和su -区别"></a>su和su -区别</h3><ul><li><p>[su]只是切换了root身份，但Shell环境仍然是普通用户的Shell；</p></li><li><p>[su -]连用户和Shell环境一起切换成root身份了。只有切换了Shell环境才不会出现PATH环境变量错误，报command not found的错误。</p></li><li><p>[su]切换成root用户以后，pwd一下，发现工作目录仍然是普通用户的工作目录；而用[su -]命令切换以后，工作目录变成root的工作目录了。</p></li><li><p>用echo $PATH命令看一下su和su - 后的环境变量已经变了。 </p></li></ul><h3 id="实际例子："><a href="#实际例子：" class="headerlink" title="实际例子："></a>实际例子：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cqd@cqd:~$ su -</span><br><span class="line">Password: </span><br><span class="line">root@cqd:~<span class="comment"># pwd</span></span><br><span class="line">/root</span><br><span class="line">root@cqd:~<span class="comment"># echo $PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span><br><span class="line">root@cqd:~<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">logout</span></span><br><span class="line">cqd@cqd:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/cqd</span><br><span class="line">cqd@cqd:~$ su</span><br><span class="line">Password: </span><br><span class="line">root@cqd:/home/cqd<span class="comment"># pwd</span></span><br><span class="line">/home/cqd</span><br><span class="line">root@cqd:/home/cqd<span class="comment"># echo $PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span><br><span class="line">root@cqd:/home/cqd<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h2><p>sudo是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的root命令的一个工具，如halt，reboot，su等等。<br>这样不仅减少了root用户的登录和管理时间，同样也提高了安全性。</p><p>是一种权限管理机制，管理员可以授权于一些普通用户去执行一些 root 执行的操作，而不需要知道 root 的密码。</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ol><li><p>sudo能够限制用户只在某台主机上运行某些命令。</p></li><li><p>sudo提供了丰富的日志，详细地记录了每个用户干了什么。它能够将日志传到中心主机或者日志服务器。<strong>默认的安全策略记录在 /etc/sudoers 文件中</strong>，属性必须为0440</p></li><li><p>sudo的配置文件是sudoers文件，它允许系统管理员集中的管理用户的使用权限和使用的主机。</p><blockquote><p>当用户执行sudo时，系统会主动寻找/etc/sudoers文件，判断该用户是否有执行sudo的权限</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@cqd:/home/cqd<span class="comment"># ll /etc/sudoers</span></span><br><span class="line">-r--r----- 1 root root 755 Feb  3  2020 /etc/sudoers </span><br></pre></td></tr></table></figure></blockquote><p> sudoers主要内容如下：</p> <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">格式：授权用户/组 主机  =[(切换到哪些用户或组)] [是否需要输入密码验证] 命令1,命令2,...</span><br><span class="line"></span><br><span class="line">字段1：</span><br><span class="line">不以%号开头的表示&quot;将要授权的用户&quot; root</span><br><span class="line">以%号开头的表示&quot;将要授权的组&quot; %wheel</span><br><span class="line"></span><br><span class="line">字段2:表示允许登录的主机</span><br><span class="line">ALL表示所有; 如果该字段不为ALL,表示授权用户只能在某些机器上登录本服务器来执行sudo命令</span><br><span class="line">eg:jack mycomputer=/usr/sbin/reboot,/usr/sbin/shutdown</span><br><span class="line">表示: 普通用户jack在主机(或主机组)mycomputer上, 可以通过sudo执行reboot和shutdown两个命令</span><br><span class="line"></span><br><span class="line">字段3:</span><br><span class="line">如果省略, 相当于(root:root)，表示可以通过sudo提权到root; 如果为(ALL)或者(ALL:ALL), 表示能够提权到(任意用户:任意用户组)。</span><br><span class="line">注意：如果没省略,必须使用( )双括号包含起来</span><br><span class="line"></span><br><span class="line">字段4：</span><br><span class="line">可能取值是NOPASSWD:。请注意NOPASSWD后面带有冒号:。表示执行sudo时可以不需要输入密码</span><br><span class="line">eg:lucy ALL=(ALL) NOPASSWD: /bin/useradd</span><br><span class="line">表示: 普通用户lucy可以在任何主机上, 通过sudo执行/bin/useradd命令, 并且不需要输入密码</span><br><span class="line"></span><br><span class="line">字段5:授权给用户的操作</span><br><span class="line">逗号分开一系列命令或者ALL表示允许所有操作</span><br></pre></td></tr></table></figure><p> 例子：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">15  <span class="comment"># User privilege specification</span></span><br><span class="line">16  root    ALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line">17  <span class="comment"># Members of the admin group may gain root privileges</span></span><br><span class="line">18  %admin ALL=(ALL) ALL</span><br><span class="line"></span><br><span class="line">19  <span class="comment"># Allow members of group sudo to execute any command</span></span><br><span class="line">20  %sudo   ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure></li><li><p>sudo暂时切换到超级用户模式以执行超级用户权限，提示输入密码时该密码为当前用户的密码，而不是超级账户的密码。不过有时间限制，Ubuntu默认为一次时长15分钟。</p></li><li><p>由于不需要超级用户的密码，部分类Unix系统甚至利用sudo使一般用户取代超级用户作为管理帐号，例如Ubuntu、[Mac OS X]。</p><p> 系统默认创建了一个名为 sudo 的组。只要把用户加入这个组，用户就具有了 sudo 的权限。<br> 至于如何把用户加入 sudo 组，您可以直接编辑 /etc/group 文件，当然您得使用一个有 sudo 权限的用户来干这件事：</p> <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cqd@cqd:~$ cat /etc/group</span><br><span class="line">root:x:0:</span><br><span class="line">lxd:x:117:cqd</span><br><span class="line">systemd-coredump:x:999:</span><br><span class="line">cqd:x:1000:</span><br></pre></td></tr></table></figure></li><li><p>在 ubuntu 中，sudo 的日志默认被记录在 /var/log/auth.log 文件中。当我们执行 sudo 命令时，相关日志都是会被记录下来的。root@cqd:/home/cqd# cat /var/log/auth.log</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@cqd:/home/cqd# cat /var/log/auth.log</span><br><span class="line">Apr 19 21:06:01 cqd useradd[1068]: new group: name=cqd, GID=1000</span><br><span class="line">Apr 19 21:06:01 cqd useradd[1068]: new user: name=cqd, UID=1000, GID=1000, home=/home/cqd, shell=/bin/bash, from=none</span><br><span class="line">Apr 19 21:06:01 cqd useradd[1068]: add &#x27;cqd&#x27; to group &#x27;adm&#x27;</span><br><span class="line">Apr 19 21:06:01 cqd useradd[1068]: add &#x27;cqd&#x27; to group &#x27;cdrom&#x27;</span><br></pre></td></tr></table></figure></li></ol><h2 id="sudo-su"><a href="#sudo-su" class="headerlink" title="sudo su"></a>sudo su</h2><p>根据以上的解释，sudo su就很容易理解了。</p><p>sudo su是当前用户暂时申请root权限，所以输入的不是root用户密码，而是当前用户的密码。</p><p>sudo是用户申请管理员权限执行一个操作，而此处的操作就是变成管理员。</p><p>[sudo -l]列出目前的权限。 从以下例子中就看出此用户的权限。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@cqd:/home/cqd<span class="comment"># sudo -l</span></span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> root on cqd:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User root may run the following commands on cqd:</span><br><span class="line">    (ALL : ALL) ALL</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客建设的链接</title>
      <link href="/2023/04/15/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E8%AE%BE%E7%9A%84%E9%93%BE%E6%8E%A5/"/>
      <url>/2023/04/15/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E8%AE%BE%E7%9A%84%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>icon图标<br><a href="https://fontawesome.com/icons?from=io">https://fontawesome.com/icons?from=io</a></p><p>阿里iconfont图标<br><a href="https://www.iconfont.cn/manage/index">https://www.iconfont.cn/manage/index</a></p><p>搭建网站教程<br><a href="https://www.fomal.cc/posts/3451f874.html">https://www.fomal.cc/posts/3451f874.html</a></p><p>butterfly 外挂标签的使用<br><a href="https://www.fomal.cc/posts/2013454d.html#2-Butterfly%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE">https://www.fomal.cc/posts/2013454d.html#2-Butterfly%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE</a></p><p>Emoji<br><a href="https://emojipedia.org/">https://emojipedia.org/</a></p><p>添加外挂标签，在[Blogroot]\themes\butterfly\scripts\tag\目录下新建iconfont.js，打开[Blogroot]\themes\butterfly\scripts\tag\iconfont.js,输入：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">iconFont</span>(<span class="params">args</span>) &#123;</span><br><span class="line">  args = args.<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>).<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> p0 = args[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> p1 = args[<span class="number">1</span>]?args[<span class="number">1</span>]:<span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;svg class=&quot;icon&quot; style=&quot;width:<span class="subst">$&#123;p1&#125;</span>em; height:<span class="subst">$&#123;p1&#125;</span>em&quot; aria-hidden=&quot;true&quot;&gt;&lt;use xlink:href=&quot;#<span class="subst">$&#123;p0&#125;</span>&quot;&gt;&lt;/use&gt;&lt;/svg&gt;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;icon&#x27;</span>,iconFont);</span><br></pre></td></tr></table></figure><p>语法示例：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-ox_chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br></pre></td></tr></table></figure></p><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cron表达式</title>
      <link href="/2023/04/14/cron%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2023/04/14/cron%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="cron表达式的结构"><a href="#cron表达式的结构" class="headerlink" title="cron表达式的结构"></a>cron表达式的结构</h2><p>cron表达式是一个字符串，有5位、6位、7位之分，不同位数之间以空格分隔</p><div class="table-container"><table><thead><tr><th>位数</th><th>每位的含义</th></tr></thead><tbody><tr><td>5位：<em> </em> <em> </em> *</td><td>分、时、天、月、周</td></tr><tr><td>6位：<em> </em> <em> </em> <em> </em></td><td>秒、分、时、天、月、周</td></tr><tr><td>7位：<em> </em> <em> </em> <em> </em> *</td><td>秒、分、时、天、月、周、年</td></tr></tbody></table></div><p>其语法格式为：</p><p>“秒域 分域 时域 日域 月域 周域 年域”</p><p>在大部分情况下会省略年这一位，成为6位，省略时表示每年。再省略秒，就成为5位。</p><blockquote><p>注意：Linux中的crontab表达式只有5位。</p></blockquote><h2 id="cron每个域的取值范围"><a href="#cron每个域的取值范围" class="headerlink" title="cron每个域的取值范围"></a>cron每个域的取值范围</h2><div class="table-container"><table><thead><tr><th>域名</th><th>可取值</th><th>可取符号（仅列部分常用）</th></tr></thead><tbody><tr><td>秒域</td><td>0~59的整数</td><td>*    -    ,    /</td></tr><tr><td>分域</td><td>0~59的整数</td><td>*    -    ,    /</td></tr><tr><td>时域</td><td>0~23的整数</td><td>*    -    ,    /</td></tr><tr><td>日域</td><td>1~31的整数</td><td>*    -    ,    /    ?    L</td></tr><tr><td>月域</td><td>1~12的整数或JAN~DEC</td><td>*    -    ,    /</td></tr><tr><td>周域</td><td>1~7的整数（星期天为1）或SUN~SAT对于星期，最好使用英文缩写，更加清晰</td><td>*    -    ,    /    ?    L    #</td></tr><tr><td>年域</td><td>1970~2099的整数</td><td>*    -    ,    /</td></tr></tbody></table></div><h3 id="常用字符"><a href="#常用字符" class="headerlink" title="常用字符"></a>常用字符</h3><ul><li>【*】：每的意思。在不同的字段上，就代表每秒，每分，每小时等。</li><li>【-】：指定值的范围。比如[1-10]，在秒字段里就是每分钟的第1到10秒，在分就是每小时的第1到10分钟，以此类推。</li><li>【,】：指定某几个值。比如[2,4,5]，在秒字段里就是每分钟的第2，第4，第5秒，以此类推。</li><li>【/】：指定值的起始和增加幅度。比如[3/5]，在秒字段就是每分钟的第3秒开始，每隔5秒生效一次，也就是第3秒、8秒、13秒，以此类推。</li><li>【?】：仅用于【日】和【周】字段。因为在指定某日和周几的时候，这两个值实际上是冲突的，所以需要用<em>【?】标识不生效的字段。比如【0 1 </em> <em> </em> ?】就代表每年每月每日每小时的1分0秒触发任务。这里的周就没有效果了。</li></ul><h3 id="极少能用到的字符"><a href="#极少能用到的字符" class="headerlink" title="极少能用到的字符"></a>极少能用到的字符</h3><ul><li>SUN：仅用于【周】字段，表示星期日。也可以用数字1设置。周日到周六分别为SUN，MON，TUE，WED，THU，FRI和SAT，对应数字1，2，3，4，5，6，7。目前Quartz支持。</li><li>L：即last，用于【日】【周】字段。这里需要注意的是，在不同的字段的不同使用方式，其含义有所差别。<ul><li>用于日字段：直接使用L代表每个月的最后一天。也支持偏移量的方式，配置[L-1]则代表每月的倒数第二天。</li><li>用于周字段：直接使用L代表每周的最后一天，也就是等效于[7]或[SAT]，但是如果配合上数字，比如[7L]，则代表每个月最后一个周六，等效于[SATL]。目前Quartz支持。</li></ul></li><li>#：只能用于周域上，#后面的数字表示第几周，如果不存在这个周的值，则不执行；<ul><li>例如，”0 0 0 ? <em> 5#2”表示每个月第2个周四零点执行，”15 30 6 ? </em> 7#5”表示每个月第5个周六6:30:15执行，如果某个月不存在第5个周六，则不执行。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*    *    *    *    *    *    *</span><br><span class="line">-    -    -    -    -    -    -</span><br><span class="line">|    |    |    |    |    |    |</span><br><span class="line">|    |    |    |    |    |    +----- 年域 (1970 ~ 2099)</span><br><span class="line">|    |    |    |    |    +---------- 周域 (1 ~ 7 或 SUN ~ SAT) (星期天 为1)</span><br><span class="line">|    |    |    |    +--------------- 月域 (1 ~ 12 或 JAN ~ DEC)</span><br><span class="line">|    |    |    +-------------------- 日域 (0 ~ 31)</span><br><span class="line">|    |    +------------------------- 时域 (0 ~ 23)</span><br><span class="line">|    +------------------------------ 分域 (0 ~ 59)</span><br><span class="line">+----------------------------------- 秒域 (0 ~ 59)</span><br></pre></td></tr></table></figure><h2 id="一些常用实例"><a href="#一些常用实例" class="headerlink" title="一些常用实例"></a>一些常用实例</h2><div class="table-container"><table><thead><tr><th>执行时间</th><th>cron表达式</th></tr></thead><tbody><tr><td>每隔5秒钟执行一次</td><td><em>/5  </em>  <em>  </em>  *  ?</td></tr><tr><td>每隔1分钟执行一次</td><td>0  <em>/1  </em>  <em>  </em>  ?</td></tr><tr><td>每天凌晨1点执行一次</td><td>0  0  1  <em>  </em>  ?</td></tr><tr><td>每天23点55分执行一次</td><td>0  55  23  <em>  </em>  ？</td></tr><tr><td>每月最后一天23点55分执行一次</td><td>0  55  23  L  *  ？</td></tr><tr><td>每周六9点执行一次</td><td>0  0  9  ?  *  L</td></tr><tr><td>每月最后一个周五，每隔2小时执行一次</td><td>0  0  <em>/2  ?  </em>  6L</td></tr><tr><td>每月的第三个星期五上午9:15执行一次</td><td>0  15  9  ?  *  6#3</td></tr><tr><td>在每天中午12点到12:05期间的每1分钟执行</td><td>0  0-5  12  <em>  </em>  ?</td></tr><tr><td>表示周一到周五每天上午9:15执行</td><td>0  15  9  ?  *  2-6</td></tr><tr><td>表示周一到周五每天上午9:15执行</td><td>0  15  9  ?  *  MON-FRI</td></tr><tr><td>每个月的最后一个星期五上午9:15执行</td><td>0  15  9  ?  *  6L</td></tr><tr><td>每天10点，12点，16点 各执行一次</td><td>0  0  10,12,16  <em> </em> ?</td></tr><tr><td>朝九晚五工作时间内每半小时执行一次</td><td>0  0/30  9-17  <em>  </em> ?</td></tr><tr><td>每个星期三中午12点执行一次</td><td>0  0  12  ?  *  4</td></tr><tr><td>每年三月的星期三的下午2:10和2:44各执行一次</td><td>0  10,44  14  ?  3  4　</td></tr><tr><td>每年三月的每周三的14:10分到14:44各执行一次</td><td>0  10,44  14  ?  3  WED</td></tr><tr><td>每月的第三个星期五上午10:15执行一次</td><td>0  15  10  ?  *  6#3</td></tr><tr><td>每月的第三个星期五上午10:15执行一次</td><td>0  15  10  ?  *  FRI#3</td></tr><tr><td>每分钟的第10秒与第20秒都会执行</td><td>10,20  <em>  </em>  <em>  </em> ?</td></tr><tr><td>每月一日凌晨2点30执行一次</td><td>0  30  2  1  *  ?</td></tr></tbody></table></div><h2 id="关于的cron执行时区tips"><a href="#关于的cron执行时区tips" class="headerlink" title="关于的cron执行时区tips:"></a>关于的cron执行时区tips:</h2><ol><li>Cron表达式执行时按照本地时间还是UTC时间取决于实际使用的调度程序。大多数情况下，使用本地时间。但是，一些调度程序（例如AWS Lambda）可能使用UTC时间执行Cron表达式。建议查看使用的调度程序的文档以了解其行为。</li><li><a href="http://cron.ciding.cc/">表达式生成器,可以用于验证和生成</a></li></ol><ul><li>在Linux中，Cron表达式执行通常基于系统的本地时间。这意味着Cron作业将按照与系统时区相关的本地时间执行。</li></ul><p>可以通过查看系统时区来确认。使用以下命令检查当前系统时区：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure><br>如果需要，可以使用以下命令设置系统时区：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone [时区字符串]</span><br></pre></td></tr></table></figure><br>请注意，虽然Cron表达式执行按照本地时间执行，但依赖于系统时间，因此在改变系统时区之后，可能需要使用 systemctl restart cron 命令来重新加载Cron服务，以使Cron作业按新的时区执行。</p><ul><li><p>在Quartz.NET中，默认情况下，Cron表达式执行使用的是本地时间。这与大多数操作系统和应用程序都使用本地时间的原则一致。但是，Quartz.NET也支持使用UTC时间执行Cron表达式，因此可以根据需要进行配置。</p></li><li><p>在github Action中会提示Actions schedules run at most every 5 minutes using UTC time. 默认按照utc时间</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Basic Knowledge of Computer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> basic Knowledge of Computer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo入门教程</title>
      <link href="/2023/04/14/hexo%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2023/04/14/hexo%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看板娘</title>
      <link href="/2023/04/04/%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
      <url>/2023/04/04/%E7%9C%8B%E6%9D%BF%E5%A8%98/</url>
      
        <content type="html"><![CDATA[<p>以Butterfly主题为例，在[Blogroot]\themes\butterfly\source\目录下打开终端,输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/stevenjoezhang/live2d-widget.git live2d-widget</span><br></pre></td></tr></table></figure><br>这行指令的意思就是clone这个项目到source路径下并重命名为live2d-widget。emm，貌似本来就叫live2d-widget。反正算是一个踩坑点。如果是用下载项目压缩包，解压后放到这里的，也记得把文件夹更名为live2d-widget。</p><p>找到路径[Blogroot]\themes\butterfly\source\live2d-widget\autoload.js，打开autoload.js，修改内容：<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</span><br><span class="line">+ const live2d_path = &quot;/live2d-widget/&quot;;</span><br></pre></td></tr></table></figure><br>此处引用一下参考教程原话：autoload.js中的注释的绝对地址指的是，将资源打包放到[Blogroot]/theme/next/source中后，以[Blogroot]/theme/next/source为根目录（/）的绝对路径。</p><p>在Butterfly的主题配置文件[Blogroot]_config.butterfly.yml中,<br>butterfly主题其实自带fontawesome依赖，无需引入，<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Inject</span><br><span class="line">    # Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span><br><span class="line">    # 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span><br><span class="line">    inject:</span><br><span class="line">      head:</span><br><span class="line">        # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">      bottom:</span><br><span class="line">        # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br><span class="line">+       - &lt;script defer src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>保存所有文件的修改，然后照例执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><br>就能在localhost:4000看到预览了。</p><p>自定义修改</p><p>有一定前端基础的小伙伴可以通过修改[Blogroot]\themes\butterfly\source\live2d-widget路径下的样式资源文件：</p><p>waifu-tips.js:包含了按钮和对话框的逻辑</p><p>waifu-tips.json :定义了触发条件（selector，CSS 选择器）和触发时显示的文字（text）；</p><p>waifu.css:看板娘的样式表。可以对看板娘的位置布局等做自定义修改。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
